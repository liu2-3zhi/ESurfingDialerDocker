name: 每日构建

on:
  schedule:
    - cron: ' 0 * * * * '
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write
  discussions: write
  packages: write
  id-token: write
  attestations: write

env:
  Amd_Phone_Docker_Local_Name: esurfingdockerphoneamd64
  Amd_Phone_Docker_Name: esurfingdockerphonedocker
  Amd_Phone_Docker_Github_Download_Local_Name: ESurfingDockerPhone.tar.gz
  Amd_Pc_Docker_Local_Name: esurfingdockerpc
  Amd_Pc_Docker_Name: esurfingdockerpc
  Amd_Pc_Docker_Github_Download_Local_Name: ESurfingDockerPc.tar.gz
  Amd_Pc_Without_Docker_Local_Folder_Name: ESurfingDialer
  Amd_Pc_Without_Docker_Local_Folder_Compress_Name: ESurfingDialer.zip

jobs:
  build_amd64:
    runs-on: ubuntu-latest  # 在最新的 Ubuntu 环境中运行
    
    environment:
      name: ESurfingDialer

    steps:
    - name: 下载本项目所有代码
      uses: actions/checkout@v4
      with:
        path: '${{ github.workspace }}'

    - name: 生成时间戳
      run: |
          echo "TIMESTAMP=$(date +'%Y.%m.%d.%H.%M.%S')" >> $GITHUB_ENV
          echo "TIMESTAMP2=$(date +'%Y年%m月%d日%H时%M分%S秒')" >> $GITHUB_ENV

    - name: 生成更新日志
      run: echo -e "# 编译日期：${{ env.TIMESTAMP2 }} \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 查看工作目录
      run: |
        ls -l ${{ github.workspace }}

    - name: 下载 ESurfingDialer 项目代码
      uses: actions/checkout@v4
      with:
        repository: 'Rsplwe/ESurfingDialer'
        path: '${{ github.workspace }}/ESurfingDialer'
        
    - name: 查看工作目录
      run: |
        ls -l ${{ github.workspace }}
        
    - name: 查看 ESurfingDialer 目录
      run: |
        ls -l ${{ github.workspace }}/ESurfingDialer

    - name: 设置 JDK 20
      uses: actions/setup-java@v4
      with:
        java-version: '20'
        distribution: 'zulu'

    - name: 查看 Java 版本
      run: |
        java -version

    - name: 进入 ESurfingDialer 目录并执行构建
      run: |
        cd ${{ github.workspace }}/ESurfingDialer
        ./gradlew shadowJar

    - name: 查看 ESurfingDialer 构建产物
      run: |
        ls -l ${{ github.workspace }}/ESurfingDialer/build/libs

    - name: 上传 ESurfingDialer 的 JAR 构建产物
      uses: actions/upload-artifact@v3
      with:
        name: ESurfingDialer 的 JAR 构建产物
        path: '${{ github.workspace }}/ESurfingDialer/build/libs/*'

    - name: 生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/ESurfingDialer/build/libs/*'

    - name: 查找最新构建的 Jar 文件并复制
      run: |
        chmod +x ${{ github.workspace }}/FindLasterBuildJar.sh
        ${{ github.workspace }}/FindLasterBuildJar.sh

    - name: 查看 Jar 文件复制结果
      run: |
        ls -l ${{ github.workspace }}/Phone

    - name: 生成更新日志
      run:  |
        echo -e "${{ env.LatestJarFilename }}  此文件为Rsplwe大佬的项目  https://github.com/Rsplwe/ESurfingDialer  的最新编译文件。\n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 为 ESurfingDialer 的 JAR 构建产物 生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/Phone/client.jar'

    - name: 下载 Oracle-Docker-images 项目代码
      uses: actions/checkout@v4
      with:
        repository: 'oracle/docker-images'
        path: '${{ github.workspace }}/Oracle-Docker-images'

    - name: 查看工作目录
      run: |
        ls -l ${{ github.workspace }}

    - name: 查看 Oracle-Docker-images 目录
      run: |
        ls -l ${{ github.workspace }}/Oracle-Docker-images

    - name: 编译 OracleJava 镜像
      run: |
        chmod +x ${{ github.workspace }}/OracleJava.sh
        ${{ github.workspace }}/OracleJava.sh

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 编译 ESurfingDockerPhone 镜像
      run: |
        cd ${{ github.workspace }}/Phone
        chmod +x ./build.sh
        ./build.sh

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 登录到 GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 登录 DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 为 ${{ env.Amd_Phone_Docker_Local_Name}} 镜像打标签  ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }}
      run: docker tag ${{ env.Amd_Phone_Docker_Local_Name }} ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }}

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 推送 ${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }} 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }}

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 获取 ${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }} 的 Github 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }} | cut -d '@' -f 2)
        echo "DIGEST=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }} 的 Github 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}
        subject-digest: ${{ env.DIGEST }}
        push-to-registry: false

    - name: 为 ${{ env.Amd_Phone_Docker_Local_Name}} 镜像打标签  ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }}
      run: docker tag ${{ env.Amd_Phone_Docker_Local_Name }} ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }}

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 推送 ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }} 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }}

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 获取 ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }} 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }} | cut -d '@' -f 2)
        echo "DIGEST2=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:${{ env.TIMESTAMP }} 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}
        subject-digest: ${{ env.DIGEST2 }}
        push-to-registry: false

    - name: 为 ${{ env.Amd_Phone_Docker_Local_Name}} 镜像打标签  ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}:latest
      run: docker tag ${{ env.Amd_Phone_Docker_Local_Name }} ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}:latest

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 推送 ${{ env.Amd_Phone_Docker_Name}}:latest 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}:latest

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 获取 ${{ env.Amd_Phone_Docker_Name}}:latest 的 Github 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}:latest | cut -d '@' -f 2)
        echo "DIGEST3=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ${{ env.Amd_Phone_Docker_Name}}:latest 的 Github 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Phone_Docker_Name }}
        subject-digest: ${{ env.DIGEST3 }}
        push-to-registry: false

    - name: 为 ${{ env.Amd_Phone_Docker_Local_Name}} 镜像打标签 ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:latest
      run: docker tag ${{ env.Amd_Phone_Docker_Local_Name }} ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:latest

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 推送 ${{ env.Amd_Phone_Docker_Name}}:latest 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:latest

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 获取 ${{ env.Amd_Phone_Docker_Name}}:latest 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:latest | cut -d '@' -f 2)
        echo "DIGEST4=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ${{ env.Amd_Phone_Docker_Name}}:latest 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}
        subject-digest: ${{ env.DIGEST4 }}
        push-to-registry: false

    - name: 下载 ${{ env.Amd_Phone_Docker_Name}}:latest 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Phone_Docker_Name }}:latest -o ${{ github.workspace }}/Phone/${{ env.Amd_Phone_Docker_Github_Download_Local_Name}}

    - name: 上传 ${{ env.Amd_Phone_Docker_Name}}:latest 镜像
      uses: actions/upload-artifact@v3
      with:
        name: ESurfingDialerPhone 的 Docker 镜像
        path: '${{ github.workspace }}/Phone/${{ env.Amd_Phone_Docker_Github_Download_Local_Name}}'

    - name: 生成更新日志
      run: echo -e "${{ env.Amd_Phone_Docker_Github_Download_Local_Name}} 此镜像占用手机设备上网资格进行网络认证。 [使用方法](https://github.com/liu23zhi/ESurfingDialerDocker/?tab=readme-ov-file#3%E4%BB%8Egithub-release%E4%B8%8B%E8%BD%BD%E5%90%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5 \"使用方法\") \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/Phone/${{ env.Amd_Phone_Docker_Github_Download_Local_Name}}'

    - name: 下载 Java21
      run: |
        chmod +x ${{ github.workspace }}/Phone/Download_jdk21.sh
        cd ${{ github.workspace }}/Phone/ 
        ./Download_jdk21.sh

    - name: 查看 Java21 下载结果
      run: |
        ls -l ${{ github.workspace }}/Phone/Direct
        ls -l ${{ github.workspace }}/Phone/Direct/jdk-21_linux-x64/
        ls -l ${{ github.workspace }}/Phone/Direct/jdk-21_windows-x64/

    - name: 修改 Phone 下的 Direct 文件夹为 ${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}
      run: |
        cd ${{ github.workspace }}/Phone/
        mv ./Direct ./${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}

    - name: 查看修改后的文件夹
      run: |
        ls -l ${{ github.workspace }}/Phone/${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}

    - name: 修改文件权限
      run: |
        chmod -R 777 ${{ github.workspace }}/Phone/${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}/

    - name: 压缩 ${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}} 文件夹为 zip 格式
      run: |
        cd ${{ github.workspace }}/Phone/
        zip -r ${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}.zip ${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}

    - name: 查看压缩文件
      run: |
        ls -l ${{ github.workspace }}/Phone/${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}

    - name: 上传 ESurfingDialer 的免 Docker 直接运行版本
      uses: actions/upload-artifact@v3
      with:
        name: ESurfingDialer 的免 Docker 直接运行版本
        path: '${{ github.workspace }}/Phone/${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}'

    - name: 生成更新日志
      run: echo -e "${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}} 此版本免Docker可运行。占用手机设备上网资格进行网络认证。 ~~[使用方法]~~（还没写） \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 为 ESurfingDialer 的免 Docker 直接运行版本生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/Phone/${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}'

    - name: 获取天翼校园网官方 Linux 版本下载地址并下载，不能获取则使用预下载文件
      run: |
        cd ${{ github.workspace }}/PC/
        pip3 install requests beautifulsoup4 lxml
        python3 ./Get_ESurfingDialerClient.py

    - name: 检查天翼校园网官方 Linux 版本下载结果
      run: |
        ls -l ${{ github.workspace }}/PC

    - name: 编译 ${{ env.Amd_Pc_Docker_Name}} 镜像
      run: |
        cd ${{ github.workspace }}/PC
        chmod +x ./build.sh
        ./build.sh

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 为 ${{ env.Amd_Pc_Docker_Local_Name}} 镜像打标签 ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }}
      run: docker tag ${{ env.Amd_Pc_Docker_Local_Name }} ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }}

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 推送 ${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }} 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }}

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 获取 ${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }} 的 Github 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }} | cut -d '@' -f 2)
        echo "DIGEST=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }} 的 Github 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}
        subject-digest: ${{ env.DIGEST }}
        push-to-registry: false

    - name: 为 ${{ env.Amd_Pc_Docker_Local_Name}} 镜像打标签 ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }}
      run: docker tag ${{ env.Amd_Pc_Docker_Local_Name }} ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }}

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 推送 ${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }} 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }}

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 获取 ${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }} 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }} | cut -d '@' -f 2)
        echo "DIGEST2=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ${{ env.Amd_Pc_Docker_Name }}:${{ env.TIMESTAMP }} 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}
        subject-digest: ${{ env.DIGEST2 }}
        push-to-registry: false

    - name: 为 ${{ env.Amd_Pc_Docker_Local_Name}} 镜像打标签 ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}:latest
      run: docker tag ${{ env.Amd_Pc_Docker_Local_Name }} ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}:latest

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 推送 ${{ env.Amd_Pc_Docker_Name}}:latest 镜像到 GitHub Container Registry
      run: docker push ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}:latest

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 获取 ${{ env.Amd_Pc_Docker_Name}}:latest 的 Github 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}:latest | cut -d '@' -f 2)
        echo "DIGEST3=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ${{ env.Amd_Pc_Docker_Name}}:latest 的 Github 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/${{ env.Amd_Pc_Docker_Name }}
        subject-digest: ${{ env.DIGEST3 }}
        push-to-registry: false

    - name: 为 ${{ env.Amd_Pc_Docker_Name}} 镜像打标签 ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}:latest
      run: docker tag ${{ env.Amd_Pc_Docker_Local_Name }} ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}:latest

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 推送 ${{ env.Amd_Pc_Docker_Name}}:latest 镜像到 DockerHub
      run: docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}:latest

    - name: 查看当前可用镜像
      run: |
        docker image ls

    - name: 获取 ${{ env.Amd_Pc_Docker_Name}}:latest 的 DockerHub 镜像的 sha256
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}:latest | cut -d '@' -f 2)
        echo "DIGEST4=$DIGEST" >> $GITHUB_ENV

    - name: 生成 ${{ env.Amd_Pc_Docker_Name}}:latest 的 DockerHub 镜像证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}
        subject-digest: ${{ env.DIGEST4 }}
        push-to-registry: false

    - name: 下载 ${{ env.Amd_Pc_Docker_Name}}:latest 镜像
      run: |
        docker save ${{ vars.DOCKERHUB_USERNAME }}/${{ env.Amd_Pc_Docker_Name }}:latest -o ${{ github.workspace }}/PC/${{ env.Amd_Pc_Docker_Github_Download_Local_Name}}

    - name: 上传 ${{ env.Amd_Pc_Docker_Name}}:latest 镜像
      uses: actions/upload-artifact@v3
      with:
        name: ESurfingDialerPc 的 Docker 镜像
        path: '${{ github.workspace }}/PC/${{ env.Amd_Pc_Docker_Github_Download_Local_Name }}'

    - name: 生成更新日志
      run: echo -e "${{ env.Amd_Pc_Docker_Local_Name}} 此镜像占用电脑设备上网资格进行网络认证。 [使用方法](https://github.com/liu23zhi/ESurfingDialerDocker/?tab=readme-ov-file#3%E4%BB%8Egithub-release%E4%B8%8B%E8%BD%BD%E5%90%8E%E6%9C%AC%E5%9C%B0%E5%AF%BC%E5%85%A5-1 \"使用方法\") \n\n" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 生成证明
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: '${{ github.workspace }}/PC/${{ env.Amd_Pc_Docker_Local_Name}}'

    - name: 生成更新日志
      run: echo "### 好的更新已经到来（更新日志生成测试）" >> ${{ github.workspace }}/CHANGELOG.txt

    - name: 创建 Release
      uses: softprops/action-gh-release@v2
      with:
        body_path: ${{ github.workspace }}/CHANGELOG.txt
        tag_name: V${{ env.TIMESTAMP }}
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          ${{ github.workspace }}/ESurfingDialer/build/libs/*
          ${{ github.workspace }}/PC/${{ env.Amd_Pc_Docker_Github_Download_Local_Name}}
          ${{ github.workspace }}/Phone/${{ env.Amd_Phone_Docker_Github_Download_Local_Name}}
          ${{ github.workspace }}/Phone/${{ env.Amd_Pc_Without_Docker_Local_Folder_Name}}

